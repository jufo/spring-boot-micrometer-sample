buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'de.markushanses.sample.micrometer'
version = '1'
targetCompatibility = '10'
sourceCompatibility = '10'

repositories {
    mavenCentral()
    //compile('io.micrometer:micrometer-core')
    //compile 'io.dropwizard.metrics:metrics-core:4.0.3'
}

ext {
    environment = findProperty('environment') ? findProperty('environment') : 'local'
}


dependencies {
    // minimal spring boot with actuator
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-actuator')

    // web-ui
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation('org.webjars:bootstrap:4.1.3')
    implementation('org.webjars:webjars-locator:0.34')
    implementation('org.webjars:jquery:3.3.1-1')
    implementation('org.webjars:npm:5.0.0-2')

    // monitoring
    implementation('io.micrometer:micrometer-registry-prometheus:1.1.0')
    implementation('io.micrometer:micrometer-registry-elastic:1.1.0')
    implementation('io.github.mweirauch:micrometer-jvm-extras:0.1.2')

    // dev tools
    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

bootRun {
    System.setProperty("spring.profiles.active", "${environment}")
    systemProperties System.properties
}
